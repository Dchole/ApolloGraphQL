type Query {
  launches(pageSize: Int, after: Int, isBooked: Boolean): LaunchConnection!
  launch(id: ID!): Launch!
  me: User!
}

type Mutation {
  bookTrips(launchIds: [ID!]!): TripUpdateResponse!
  cancelTrip(launchId: ID!): TripUpdateResponse!
  login(email: String!, password: String!): String!
  signUp(username: String!, email: String!, password: String!): String!
}

type LaunchConnection {
  cursor: Int
  hasMore: Boolean!
  launches: [Launch!]!
}

type TripUpdateResponse {
  success: Boolean!
  message: String!
  launches: [Launch!]
}

type Launch {
  id: ID!
  site: String!
  mission: Mission!
  rocket: Rocket!
  isBooked: Boolean!
}

type Rocket {
  id: ID!
  name: String!
  type: String!
}

type User {
  id: ID!
  username: String!
  email: String!
  trips: [Launch!]!
}

type Mission {
  name: String!
  missionPatch(size: PatchSize): String
}

enum PatchSize {
  SMALL
  LARGE
}
